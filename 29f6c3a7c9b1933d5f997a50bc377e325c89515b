{
  "comments": [
    {
      "key": {
        "uuid": "5a7ca5a3_aac35337",
        "filename": "src/currentcallview.cpp",
        "patchSetId": 29
      },
      "lineNbr": 582,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "A I mentioned in the lrc patch comments, I don\u0027t think its worth checking for which key changed... just update all of the labels on the changed() signal",
      "range": {
        "startLine": 582,
        "startChar": 9,
        "endLine": 582,
        "endChar": 39
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_cac00f2d",
        "filename": "src/currentcallview.cpp",
        "patchSetId": 29
      },
      "lineNbr": 584,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "this mallocs a new string each time you call it, you have to free this string with g_free() or else its a mem leak, as documented here:\nhttps://developer.gnome.org/glib/unstable/glib-String-Utility-Functions.html#g-strdup-printf",
      "range": {
        "startLine": 584,
        "startChar": 16,
        "endLine": 584,
        "endChar": 31
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_6add3b14",
        "filename": "src/currentcallview.cpp",
        "patchSetId": 29
      },
      "lineNbr": 584,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "why not just write \"callID: %s\", ...  instead?",
      "range": {
        "startLine": 584,
        "startChar": 32,
        "endLine": 584,
        "endChar": 50
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_8ae217d4",
        "filename": "src/currentcallview.cpp",
        "patchSetId": 29
      },
      "lineNbr": 620,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "no need to convert it to a QString, you can just print the number directly, for example if its a float: \"width: %f\", 10.1",
      "range": {
        "startLine": 620,
        "startChar": 19,
        "endLine": 620,
        "endChar": 100
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_2ae743e6",
        "filename": "src/currentcallview.cpp",
        "patchSetId": 29
      },
      "lineNbr": 649,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "you already have the GAction as the first parameter of this function",
      "range": {
        "startLine": 649,
        "startChar": 59,
        "endLine": 649,
        "endChar": 150
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_4aecffc7",
        "filename": "src/ring_client.cpp",
        "patchSetId": 29
      },
      "lineNbr": 58,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "doesn\u0027t need to be imported",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 28
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_ead06bf9",
        "filename": "src/video/video_widget.cpp",
        "patchSetId": 29
      },
      "lineNbr": 37,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 27
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_aada7315",
        "filename": "src/video/video_widget.cpp",
        "patchSetId": 29
      },
      "lineNbr": 491,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "I don\u0027t think you need these, GtkCheckMenuItem implements the GtkActionable interface, so you should be able to simply associate the menu item with the action directly using gtk_actionable_set_action_name():\nhttps://developer.gnome.org/gtk3/stable/GtkActionable.html\n\nfor the smart info start/stop you can put in your handler to the state changed in current call view, or in a separate handler...",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 491,
        "endChar": 1
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7ca5a3_0ace075b",
        "filename": "src/video/video_widget.cpp",
        "patchSetId": 29
      },
      "lineNbr": 553,
      "author": {
        "id": 23
      },
      "writtenOn": "2016-07-29T11:57:37Z",
      "side": 1,
      "message": "you don\u0027t need 2 items for this... its only one item \"display adva. info\", when its checked its displayed, when its unchecked its not displayed...",
      "range": {
        "startLine": 545,
        "startChar": 0,
        "endLine": 553,
        "endChar": 72
      },
      "revId": "29f6c3a7c9b1933d5f997a50bc377e325c89515b",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}